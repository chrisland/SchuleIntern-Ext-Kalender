"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateextensions"]("main",{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Calendar.vue?vue&type=script&lang=js&":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/components/Calendar.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  name: 'Calendar',\n  props: {\n    eintraege: Array,\n    kalender: Array,\n    acl: Object\n  },\n  data: function data() {\n    return {\n      today: this.$moment(),\n      openMonth: false,\n      openMonthDay: false,\n      days: ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So']\n    };\n  },\n  created: function created() {\n    this.openMonth = this.$moment(this.today).date(1);\n    this.openMonthDay = this.$moment(this.today).date(1);\n    this.gotoToday();\n  },\n  computed: {\n    weekInMonthFormat: function weekInMonthFormat() {\n      return 5;\n    },\n    getToday: function getToday() {\n      return this.today.format('YYYY-MM-DD'); //.get('date');\n    }\n  },\n  methods: {\n    handlerMouseoverEintrag: function handlerMouseoverEintrag(e) {\n      e.target.classList.add('open');\n    },\n    handlerMouseleaveEintrag: function handlerMouseleaveEintrag(e) {\n      e.target.classList.remove('open');\n    },\n    handlerClickEintrag: function handlerClickEintrag(eintrag) {\n      if (!eintrag) {\n        return false;\n      }\n\n      EventBus.$emit('eintrag--show-open', {\n        eintrag: eintrag\n      });\n    },\n    styleEintrag: function styleEintrag(eintrag, day) {\n      var ret = {};\n      var that = this;\n      this.kalender.forEach(function (kalender) {\n        if (parseInt(kalender.kalenderID) == parseInt(eintrag.calenderID)) {\n          if (that.styleMultipe(eintrag) == true) {\n            if (eintrag.startDay == day) {\n              ret = {\n                borderLeft: '5px solid ' + kalender.kalenderColor,\n                marginLeft: '0.6rem'\n              };\n            } else if (eintrag.endDay == day) {\n              ret = {\n                borderRight: '5px solid ' + kalender.kalenderColor,\n                marginRight: '0.6rem'\n              };\n            }\n\n            ret.borderBottom = '2px solid ' + kalender.kalenderColor;\n          } else {\n            ret = {\n              borderLeft: '5px solid ' + kalender.kalenderColor\n            };\n          }\n        }\n      });\n      return ret;\n    },\n    styleMultipe: function styleMultipe(eintrag) {\n      if (eintrag.endDay == '0000-00-00') {\n        return false;\n      } else if (eintrag.endDay == eintrag.startDay) {\n        return false;\n      }\n\n      return true;\n    },\n    getEintrag: function getEintrag(day) {\n      if (this.eintraege.length <= 0) {\n        return '';\n      }\n\n      var that = this; //console.log(day, this.eintraege)\n\n      var ret = []; //console.log(this.acl);\n\n      this.eintraege.forEach(function (eintrag) {\n        // if( that.$moment(eintrag.eintragDatumStart, 'YYYY-MM-DD HH:mm:ss', true)\n        //   .isSameOrAfter(day[1]+' 00:00:00') \n        //   && that.$moment(eintrag.eintragDatumEnde, 'YYYY-MM-DD HH:mm:ss', true)\n        //   .isBefore(day[1]+' 23:59:59')) {\n        // if( that.$moment(eintrag.eintragDatumStart, 'YYYY-MM-DD', true)\n        //   .isSame(day[1], 'day') \n        //   ) {\n        //console.log(eintrag);\n        if (that.acl && parseInt(that.acl.read) != 1) {\n          var date_start = new Date(eintrag.eintragDatumStart);\n          var date_end = new Date(eintrag.eintragDatumEnde);\n          var date_day = new Date(day[1]);\n\n          if (!date_end.getTime()) {\n            date_end = new Date(eintrag.eintragDatumStart);\n          } //console.log(date1, date0, date2);\n\n\n          if (date_start <= date_day && date_day <= date_end) {\n            var wholeDay = false;\n\n            if (eintrag.eintragTimeStart == eintrag.eintragTimeEnde) {\n              wholeDay = true;\n            } //console.log( eintrag.eintragTimeStart );\n\n\n            ret.push({\n              'id': eintrag.eintragID,\n              'title': eintrag.eintragTitel,\n              'startDay': eintrag.eintragDatumStart,\n              //that.$moment(eintrag.eintragDatumStart, 'YYYY-MM-DD', true).format('YYYY-MM-DD'),\n              //'start': eintrag.eintragDatumStart,\n              'startTime': that.$moment(eintrag.eintragTimeStart, 'HH:mm:ss', true).format('HH:mm'),\n              'endDay': eintrag.eintragDatumEnde,\n              'endTime': that.$moment(eintrag.eintragTimeEnde, 'HH:mm:ss', true).format('HH:mm'),\n              'wholeDay': wholeDay,\n              'place': eintrag.eintragOrt,\n              'comment': eintrag.eintragKommentar,\n              'calenderID': eintrag.kalenderID,\n              'categoryID': eintrag.eintragKategorieID,\n              'createdTime': eintrag.eintragCreatedTime,\n              'modifiedTime': eintrag.eintragModifiedTime,\n              'createdUserID': eintrag.eintragUserID,\n              'createdUserName': eintrag.eintragUserName\n            }); //console.log(ret);\n          }\n        }\n      });\n      ret = ret.sort(function (a, b) {\n        return moment(a.start).diff(b.start);\n      });\n      return ret;\n    },\n    handlerClickAdd: function handlerClickAdd(day) {\n      if (this.acl.write != 1) {\n        return false;\n      }\n\n      if (!day) {\n        return false;\n      }\n\n      EventBus.$emit('eintrag--form-open', {\n        form: {\n          startDay: day\n        }\n      }); //$event.preventDefault();\n\n      return false;\n    },\n    kwInMonth: function kwInMonth(week) {\n      return this.$moment(this.openMonth).date((week - 1) * 7 + 1).isoWeek();\n    },\n    daysInWeekFormat: function daysInWeekFormat(week) {\n      var arr = [];\n      var foo = this.$moment(this.openMonth).date((week - 1) * 7 + 1);\n      var diffToMonday = foo.day() - 1;\n      foo = foo.subtract(diffToMonday, 'days');\n\n      for (var i = 0; i < 7; i++) {\n        arr.push([foo, this.$moment(foo).format('YYYY-MM-DD')]);\n        foo = this.$moment(foo).add(1, 'day');\n      }\n\n      return arr;\n    },\n    nextMonth: function nextMonth() {\n      this.openMonth = this.$moment(this.openMonth).add(1, 'months');\n    },\n    prevMonth: function prevMonth() {\n      this.openMonth = this.$moment(this.openMonth).subtract(1, 'months');\n    },\n    gotoToday: function gotoToday() {\n      this.openMonth = this.$moment(this.today).date(1);\n    }\n  }\n});\n\n//# sourceURL=webpack://extensions/./src/components/Calendar.vue?./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js??vue-loader-options");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("f3412d4b2b86c2a4c1c8")
/******/ })();
/******/ 
/******/ }
);